#!/bin/sh
#
# phoneglue    Starts, Stops and Reloads Phoneglue.
#

### BEGIN INIT INFO
# Provides:          phoneglue
# Required-Start:    $local_fs $remote_fs $network dynlog asterisk
# Required-Stop:     $local_fs $remote_fs $network dynlog asterisk
# Default-Start:     3 5
# Default-Stop:      0 1 6
# Short-Description: Starts the phoneglue daemon
# Description:       Phoneglue is a SATC server for Asterisk
### END INIT INFO

DAEMON="phoneglue"
PHONEGLUE_BIN="/usr/bin"
PHONEGLUE_USER="phoneglue"
PHONEGLUE_GROUP="phoneglue"
# Full path to phoneglue binary
PHONEGLUE="$PHONEGLUE_BIN/$DAEMON"
PIDDIR="/var/run"
PIDFILE="$PIDDIR/$DAEMON.pid"

test -x "$PHONEGLUE" || { echo "$PHONEGLUE not installed";
  if [[ $1 == "stop" ]]; then exit 0;
  else exit 5; fi; }

if [[ $PHONEGLUE_USER ]] ; then
  PHONEGLUEARGS="-U $PHONEGLUE_USER"
fi
if [[ $PHONEGLUE_GROUP ]] ; then
  PHONEGLUEARGS="$PHONEGLUEARGS -G $PHONEGLUE_GROUP"
fi
if [[ $DYNLOG_HOST ]] ; then
  PHONEGLUEARGS="$PHONEGLUEARGS -loghost $DYNLOG_HOST"
fi

. /etc/rc.status

# Reset status of this service
rc_reset

# Source the configuration file
. /etc/sysconfig/$DAEMON

# See how we were called.
case "$1" in
    start)
  echo -n "Starting $DAEMON "
  ## Start daemon with startproc(8). If this fails
  ## the return value is set appropriately by startproc.
  /sbin/startproc $PHONEGLUE $PHONEGLUEARGS

  # Remember status and be verbose
  rc_status -v
  ;;
    stop)
  echo -n "Shutting down $DAEMON "
  ## Stop daemon with killproc(8) and if this fails
  ## killproc sets the return value according to LSB.

  /sbin/killproc -TERM $PHONEGLUE

  # Remember status and be verbose
  rc_status -v
  ;;
    try-restart|condrestart)
  ## Do a restart only if the service was active before.
  ## Note: try-restart is now part of LSB (as of 1.9).
  ## RH has a similar command named condrestart.
  if test "$1" = "condrestart"; then
    echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
  fi
  $0 status
  if test $? = 0; then
    $0 restart
  else
    rc_reset  # Not running is not a failure.
  fi
  # Remember status and be quiet
  rc_status
  ;;
    restart)
  ## Stop the service and regardless of whether it was
  ## running or not, start it again.
  $0 stop
  $0 start

  # Remember status and be quiet
  rc_status
  ;;
    force-reload)
  ## Dynlog does not support it, restart the service if it
  ## is running.

  echo -n "Reload service $DAEMON "
  $0 try-restart
  rc_status
  ;;
    reload)
  ## Like force-reload, but does nothing since Dynlog does
  ## not support reloading.
  rc_failed 3
  rc_status -v
  ;;
    status)
  echo -n "Checking for service $DAEMON "
  ## Check status with checkproc(8), if process is running
  ## checkproc will return with exit status 0.

  # NOTE: checkproc returns LSB compliant status values.
  /sbin/checkproc $PHONEGLUE
  # NOTE: rc_status knows that we called this init script with
  # "status" option and adapts its messages accordingly.
  rc_status -v
  ;;
    *)
  echo "Usage: $0 {start|stop|status|try-restart|restart}"
  exit 1
  ;;
esac
rc_exit
